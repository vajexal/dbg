command = {
    SOI ~ (
        add_breakpoint |
        remove_breakpoint |
        list_breakpoints |
        enable_breakpoint |
        disable_breakpoint |
        clear_breakpoints |
        run |
        stop |
        continue |
        step_in |
        step_out |
        step |
        print_var |
        set_var |
        quit
    ) ~
    EOI
}

ws = _{ " "+ }

run = { "run" | "r" }
stop = { "stop" }
add_breakpoint = { ("breakpoint" | "break" | "b") ~ ws ~ breakpoint_name }
remove_breakpoint = { ("remove" | "rm") ~ ws ~ breakpoint_name }
list_breakpoints = { "list" | "l" }
enable_breakpoint = { "enable" ~ ws ~ breakpoint_name }
disable_breakpoint = { "disable" ~ ws ~ breakpoint_name }
clear_breakpoints = { "clear" }
continue = { "continue" | "cont" | "c" }
step = { "step" }
step_in = { "step-in" }
step_out = { "step-out" }
print_var = { ("print" | "p") ~ (ws ~ path)? }
set_var = { "set" ~ ws ~ path ~ ("=" | (ws ~ "="? ~ " "*)) ~ value }
quit = { "quit" | "q" }

breakpoint_name = { (!(" " | "\t" | "\r" | "\n") ~ ANY)+ }
path = @{ operator* ~ name ~ ("." ~ name)* }
operator = { "*" | ("&" ~ !"&") }
name = { (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

value = _{ number | boolean | string | null }
number = @{ hex | dec }
hex = @{ "0x" ~ ASCII_HEX_DIGIT{1, 8} }
dec = @{
    "-"?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}
boolean = { "true" | "false" }
string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}
null = { "null" }
